'use strict';
/*//цикл while
let i = 0;
while (i < 4) {
    alert("while: " + i);
    i++;

// do-while  сначала выполняем тело цикла потом ставим условие

let i = 0;
do {
    alert("while: " + i);
    i++;
}
while (i < 4);// в цикле ставится ;}

//for цикл for
for (let i = 9; i > 0; i--) {
    alert(`for:${i}`);
}
for (let a = 0, b = 5; a < 100 && b < 100; a++, alert(7889)) {// можно усложнить цикл перед ; создаем переменную потом стави условие и то что будет выполнятся
    alert('for ' + b);
}
//бесконечные циклы
while (true) {
    alert(123);
}
for (; ;) {
    alert(123);
}
for (; true;) {
    alert(123);
}
// ломаем циклы прекращаем итерации c помощью break,чтобы сломать итерацию  continue;т.е все нечетные числа от 0 до 8 не выводим
for (let i = 0; i < 100; i++) {
    if (i > 8) {
        break;
    }
    if (i % 2 === 1) {
        continue;
    }
    alert(i);
}
for (let a = 0; a < 3; a++) {
    alert('Запущен внешний цикл ' + a)
    for (let b = 0; b < 3; b++) {
        alert(`Запущен внутрений цикл ${b}`)
        if (b >= 1) {
            alert("Прерываем внутрений цикл")
            break;
        }
    }

}
//мвссивы
let numbers = [1, 3, 100, 90];
let numbers2 = new Array(NaN, false, 2, 98);// создание массивов разными способами
console.log(numbers);
console.log(numbers2);
console.log(numbers2[2]);//вывели то что под индексом 2
console.log(numbers.length);// проверяем длину массива т.е сколько там лежит элементов
//ДВУМЕРНЫЙ МАССИВ ПОХОЖ НА ТАБЛИЦУ
let arr = [
    [true, 5, 123, 'cобака'],//0
    [NaN, 90, true, 'кошка'],//1
    [65, 43, false]//2

]
console.log(arr);
console.log(arr[1][2]);
let ind = 0;
console.log(arr[ind]);// использеум переменные чтобы вывести массив с индексом 0
// перебераем индексы массива все его значения c помощью циклов
let arr = [true, 5, 123, 'cобака'];
for (let i = 0; i < arr.length; i++) {
    console.log('Под индексом ' + i + ' xранится значение: ' + arr[i]);
    console.log(`Под индексом "${i}" xранится значение:"${arr[i]}"`);//то же самая запись
}
// c for in и for off
let arr = [true, 5, 123, 'cобака'];
for (const i in arr) {
    console.log('Под индексом ' + i + ' xранится значение: ' + arr[i]);
    console.log(`Под индексом "${i}" xранится значение:"${arr[i]}"`);// перебераем массив то же самое что наверху
}
for (const a of arr) {
    console.log('В массиве есть значение ' + a);
    // перебераем массив то же самое что наверху но получаем сразу значение а не индекс
}
// работа с массивами добавить удалить и т.д
let arr = [];
arr[0] = 1;
arr[340] = 56;
console.log(arr)//можно такприсваивать но следить чтобы значения ирдексов были по порядку иначе будут пустые значения
let arr2 = [NaN, 90, true, 'кошка'];
delete arr2[0];
console.log(arr2);// неправильное удаление образуется пустое значение под индесом 0
let arr = [true, 5, 123, 'cобака'];
arr.push('Привет');//добавили в конец массива элемент
console.log(arr);
console.log(arr.length);
arr.unshift(78);
console.log(arr);
console.log(arr.length);//добавили в начало массива элемент
arr.length = 5;//можно удалить последний элемент путем указания длины массива
console.log(arr);
arr.pop();//удаление последнего элемента
let Lst = arr.pop();//можно удаляемый элемент положить в переменную а потом вывести
console.log(Lst);
console.log(arr);
arr.shift();//удаляем первый элемент
let Frs = arr.shift();//кладем удаляемый элемент в переменную Frs
console.log(Frs);
console.log(arr);
//вставить в середину массива
let arr = [true, 5, 123, 'cобака'];
let deletedElem = arr.splice(1, 1, 'добавлено');// первая цифра в скобках означает номер индекса откуда ты хочешь что то удалить,вторая цифра говорит сколько элементов надо удалить третий параметр добавляет элемент можно ничего не удалять указав 0 а просто добавть под этот индекс новое значение
console.log(arr);
console.log(deletedElem);*/
